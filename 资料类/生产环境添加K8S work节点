1、参数调整
echo "* soft nofile 65535" >> /etc/security/limits.conf
echo "* hard nofile 65535" >> /etc/security/limits.conf
echo "* soft nproc 65535" >> /etc/security/limits.conf
echo "* hard nproc 65535" >> /etc/security/limits.conf
echo "* soft memlock unlimited" >> /etc/security/limits.conf
echo "* hard memlock unlimited" >> /etc/security/limits.conf

cat <<EOF >  /etc/sysctl.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system

cat > /etc/sysconfig/modules/ipvs.modules <<EOF
#!/bin/bash
modprobe -- ip_vs
modprobe -- ip_vs_rr
modprobe -- ip_vs_wrr
modprobe -- ip_vs_sh
modprobe -- nf_conntrack_ipv4
EOF

chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4

sed -ri 's/.*swap.*/#&/' /etc/fstab

2、环境准备
hostnamectl set-hostname kube-workb99  （节点名根据实际情况修改）

yum install -y nfs-utils
mkdir /data/uhomenas

cat >> /etc/fstab << EOF
2350248e29-jrx1.cn-shenzhen.nas.aliyuncs.com:/ /data/uhomenas nfs vers=4.0,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev,noresvport 0 0
EOF

mount -a

mkdir -p /data/docker; ln -s /data/docker /var/lib/docker
mkdir -p /data/kubelet; ln -s /data/kubelet /var/lib/kubelet

echo '10.111.14.160 harborm.uhomecp.com' >> /etc/hosts

3、安装Docker&K8S
cd /data/k8s_install   (该目录可从10.111.14.224机器获取)

mkdir -p /etc/docker
cat > /etc/docker/daemon.json <<EOF
{
"max-concurrent-downloads": 20,
"insecure-registries":["10.111.26.126:5000"],
"exec-opts": ["native.cgroupdriver=systemd"],
"log-driver":"json-file",
"log-opts":{ "max-size" :"100m","max-file":"2"}
}
EOF

yum install -y rpms/*.rpm

\cp -f 10-kubeadm.conf /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
chown root:root /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
systemctl daemon-reload
systemctl enable kubelet
systemctl disable firewalld
systemctl restart docker
systemctl enable docker

docker load < images/coredns_1.6.5.tar
docker load < images/flannel_v0.11.0-amd64.tar
docker load < images/kube-proxy_v1.17.0.tar
docker load < images/pause_3.1.tar

4、加入集群


在主节点10.111.14.139机器执行kubeadm token create --print-join-command |grep 'kubeadm join'获取加入集群命令，样式如下：
kubeadm join 10.111.14.150:8443 --token xc9ubw.bzeboghaoofnnl9a --discovery-token-ca-cert-hash sha256:073880ff3af16f6771f734e8d5de6b909877525e45b599358392e3c311f43e42   （该命令有有效期，过期后重新获取）

在新节点机器执行上述kubeadm join命令即可加入集群：

iptables -t nat -A OUTPUT -p tcp -d 10.111.14.150 --dport 8443 -j DNAT --to 10.111.14.139

kubeadm join 10.111.14.150:8443 --token xc9ubw.bzeboghaoofnnl9a --discovery-token-ca-cert-hash sha256:073880ff3af16f6771f734e8d5de6b909877525e45b599358392e3c311f43e42



5、暂时禁止新节点调度并打标签
kubectl cordon kube-workb99  （节点名根据实际情况修改）

kubectl label node kube-workb99 saasbnode=true  （标签根据节点用途修改，可使用kubectl describe node kube-workb1命令查看同类节点的标签设置）

6、开放新节点调度
确认新节点做好了数据库授权后执行：

kubectl uncordon kube-workb99  （节点名根据实际情况修改）
